name: CI
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened]    

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build and Push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup node 
      uses: actions/setup-node@v4
      with:
        node-version: 18       
        cache: 'yarn'
    - run: yarn
    - run: yarn run test

    - name: Generate tag
      id: generate_tag
      run: |
        SHA=$(echo $GITHUB_SHA | head -c7)
        echo "sha=$SHA" >> $GITHUB_OUTPUT

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.3.1
      with:
        role-to-assume: arn:aws:iam::975050062685:role/ecr-role
        aws-region: us-east-2

    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build docker image
      id: build-docker-image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        TAG: ${{ steps.generate_tag.outputs.sha }}
      run: | 
        docker build -t $REGISTRY/rocketseat-ci:$TAG .
        docker push $REGISTRY/rocketseat-ci:$TAG
        IMAGE=$(echo $REGISTRY/rocketseat-ci:$TAG)
        echo "image=$IMAGE" >> $GITHUB_OUTPUT

    - name: Deploy to app runner
      uses: awslabs/amazon-app-runner-deploy@main
      with:
        service: rocketseat-api
        image: ${{ steps.build-docker-image.outputs.image }}
        access-role-arn: arn:aws:iam::975050062685:role/app-runner-role
        region: us-east-2
        cpu: 1
        memory: 2
        port: 3000        